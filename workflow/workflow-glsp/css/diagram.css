/********************************************************************************
 * Copyright (c) 2019-2024 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/

.sprotty-graph {
    font-size: 15pt;
    border: none;
    height: 100%;
}

.sprotty-text {
    font-size: 12pt;
    text-anchor: middle;
}

.sprotty-node {
    stroke-width: 0;
    font-weight: bold;
}

.sprotty-label {
    stroke-width: 0;
    fill: #000;
    font-weight: inherit;
    text-align: inherit;
    font-size: 100%;
}

.sprotty-label.heading {
    font-weight: normal;
    font-size: 0.7em;
    fill: #f0f3f8;
}

.icon path {
    stroke-width: 0;
    fill: #f0f3f8;
}

.icon .icon-background {
    fill: transparent;
}

.forkOrJoinCp > .sprotty-node {
    fill: #f0f3f8;
}

.task.automated > .sprotty-node {
    fill: #5b9fa8;
}

.task.automated-cp > .sprotty-node {
    fill: #313a3e;
}

.task.hybrid > .sprotty-node {
    fill: #ae279a;
}

.task.autonomous > .sprotty-node {
    fill: #a1101f;
}

.task.cognitive > .sprotty-node {
    fill: #7c0bc7;
}

.task.manual-cp > .sprotty-node {
    fill: #73bf4d;
}

.task.manual > .sprotty-node {
    fill: #db8651;
}

.category > .sprotty-node {
    fill: #5c87bd;
}
.category-cp > .sprotty-node {
    fill: #3e2057;
}

.category .category > .sprotty-node {
    /** Add a border to nested categories, so we can distinguish them */
    stroke: #38679a;
    fill: #6f9ad0;
    stroke-width: 1;
}

.decision-cp > .sprotty-node {
    fill: #637e19;
}

.mergeCp > .sprotty-node {
    fill: #1d2fa4;
}

.edge-cp > .sprotty-edge {
    fill: burlywood;
}

.sprotty-comp {
    stroke: transparent;
    fill: transparent;
}

.label-edit input {
    margin-top: -3px;
    margin-left: -3px;
}

.sprotty-edge.weighted.low:not(.selected),
.sprotty-edge.weighted.low:not(.selected) .arrow {
    stroke: rgb(128, 90, 233);
}

.sprotty-edge.weighted.low:not(.selected) .arrow {
    fill: rgb(128, 90, 233);
}

.sprotty-edge.weighted:not(.selected),
.sprotty-edge.weighted:not(.selected) .arrow,
.sprotty-edge.weighted.medium:not(.selected),
.sprotty-edge.weighted.medium:not(.selected) .arrow {
    stroke: rgb(98, 60, 193);
}

.sprotty-edge.weighted:not(.selected) .arrow,
.sprotty-edge.weighted.medium:not(.selected) .arrow {
    fill: rgb(98, 60, 193);
}

.sprotty-edge.weighted.high:not(.selected),
.sprotty-edge.weighted.high:not(.selected) .arrow {
    stroke: rgb(68, 30, 163);
}

.sprotty-edge.weighted.high:not(.selected) .arrow {
    fill: rgb(68, 30, 163);
}

/* ----- Weighted Edge Cp (Custom Style) ----- */
.sprotty-edge.weighted-cp.low:not(.selected),
.sprotty-edge.weighted-cp.low:not(.selected) .arrow {
    stroke: rgb(0, 180, 120);
}

.sprotty-edge.weighted-cp.low:not(.selected) .arrow {
    fill: rgb(0, 180, 120);
}

.sprotty-edge.weighted-cp.medium:not(.selected),
.sprotty-edge.weighted-cp.medium:not(.selected) .arrow {
    stroke: rgb(0, 220, 150);
}

.sprotty-edge.weighted-cp.medium:not(.selected) .arrow {
    fill: rgb(0, 220, 150);
}

.sprotty-edge.weighted-cp.high:not(.selected),
.sprotty-edge.weighted-cp.high:not(.selected) .arrow {
    stroke: rgb(200, 50, 50);
}

.sprotty-edge.weighted-cp.high:not(.selected) .arrow {
    fill: rgb(200, 50, 50);
}
